@mixin textEffectFrom($side: 'r') {
  opacity: 0;
  visibility: hidden;
  @include transitionEaseOutExpo;
  @if $side == 'l' {
    transform:translateX(100px);
  }
  @else {
    transform:translateX(-100px);
  }
}
.character {
  width: 200px;
  height: 200px;
  background-color: #fff;
  @include transitionEaseOutExpo(.6s);
  text-align: center;
  transform-origin: 50% 50%;
  transform-style: preserve-3d;
  transform: translateZ(100px) rotateY(calc(var(--x) * 20deg)) rotateX(calc(var(--y) * -20deg));  
  .image {
    position: relative;
    height: 100%;
    width: 100%;
  }
  .captionInner {
    position: absolute;
    top: 50%;
    width: 100%;
    height: 1px;
    color: #fff;
    .titleText {
      position: absolute;
      bottom: 10px;
      right: 100%;
      white-space: nowrap;
      margin-right: 15px;
      text-align: right;
      > * {
        @include textEffectFrom('l');
      }
    }
    .desc {
      position: absolute;
      top: 10px;
      left: 100%;
      white-space: nowrap;
      margin-left: 15px;
      text-align: left;
      > * {
        @include textEffectFrom('r');
      }      
    }
  }
  &.active {
    width: 230px;
    height: 230px;
    box-shadow: 0 5px 20px rgba(#000,.5);
    .captionInner {
      .titleText,
      .desc {
        > * {
          opacity: 1;
          visibility: visible;
          transform:translateX(0);
          transition-delay:0.2s;
          &:nth-child(2) {
            transition-delay:0.4s;
          }
        }
      }
    }
  }
}
.character-enter-active, .character-leave-active {
  transition: all 1s
}
.character-enter, .character-leave-to /* .fade-leave-active below version 2.1.8 */ {
  opacity: 0
}